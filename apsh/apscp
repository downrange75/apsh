#!/usr/bin/perl
##################################################################################
# Copyright (C) 2010  Chris Rutledge <rutledge.chris@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
##################################################################################
use lib "/usr/local/lib/perl";
use threads;
use APSH;

##############################
# Error checking
##############################
if (! $ARGV[0] || ! $ARGV[1] || ! $ARGV[2]){
   if ((! $ARGV[0]) &&(! $ARGV[1])){
      print STDERR "Usage: apscp <NODEORGROUP[,NODEORGROUP[,..]]> <LOCALFILE> <REMOTEFILE>\n";

      if (! $ARGV[1]){
         print STDERR "\nERROR: No local file or directory name!\n";
      }

      exit(1);
   }else{
      print STDERR "WARNING: No remote file or directory name! Assuming ~/.\n";
   }
}

if ((! -e $ARGV[1]) && (! -d $ARGV[1])){
   print STDERR "ERROR: local file or directory does not exist!\n";
   exit(1);
}

##############################
# Global Variables
##############################
my $LFILE      = $ARGV[1];
my $RFILE      = $ARGV[2];
my @NODES      = APSH::GenNodes($ARGV[0]);
my @THREADS    = ();
my $RECURSIVE  = "";

if (-d $LFILE){
   $RECURSIVE = "-r";
}

if (! @NODES){
   print STDERR "ERROR: node or group not found!\n";
   exit(1);
}

##############################
# Main Code
#
# For each node found, start
# a new thread and run cmd.
##############################
for (@NODES){
   push(@THREADS, threads->create(\&RunCMD, "$_"));
}

##############################
# Join and wait for completion
# to cleanup.
##############################
for (@THREADS){
   $_->join();
}

##############################
# RunCMD()
#
# Get $HOST and $USER from string
# passed and run the command.
##############################
sub RunCMD {
   $_[0] =~ s/^://;
   $_[0] =~ s/:$//;

   my (@NODECFG) = split(/:/, $_[0]);

   open(FH, "scp -o BatchMode=yes $RECURSIVE $LFILE $NODECFG[1]\@$NODECFG[0]:$RFILE 2>&1 |");

   while(<FH>){
      print "$NODECFG[0]: $_";
   }

   close(FH);

   print "$NODECFG[0]: ...done\n";
}
